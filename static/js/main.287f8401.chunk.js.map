{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","name","src","id","email","CardList","monsters","map","index","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","this","filteredMonters","filter","toLowerCase","includes","fetch","then","res","json","users","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAKF,EAAMG,QAAQC,KAAMC,IAAG,+BAA0BL,EAAMG,QAAQG,GAAxC,4BACjC,6BAAKN,EAAMG,QAAQC,OACnB,4BAAIJ,EAAMG,QAAQI,YCJbC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAACP,EAASQ,GACzB,OACI,cAAC,EAAD,CAAuBR,QAASA,GAArBA,EAAQG,WCL1BM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAcC,EAAjB,EAAiBA,aAAjB,OACrB,uBAAOb,UAAU,SACbc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCyCHG,G,wDA3Cb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAoCRc,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SApCtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJE,E,0CAWnB,WAAU,IAAD,EAC4BI,KAAKD,MAAhCd,EADD,EACCA,SAAWW,EADZ,EACYA,YAObK,EAAkBhB,EAASiB,QAAQ,SAAAvB,GAAO,OAC7CA,EAAQC,KAAKuB,cAAcC,SAASR,EAAYO,kBAEnD,OACE,sBAAK1B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBC,aAAcU,KAAKV,eAC5D,cAAC,EAAD,CAAUL,SAAUgB,S,+BAK1B,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKd,SAAS,CAAEV,SAAUwB,W,GAnC7BC,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.287f8401.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt={props.monster.name} src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {\r\n            props.monsters.map((monster, index) => {\r\n                return (\r\n                    <Card key={monster.id} monster={monster} />\r\n                )\r\n            })\r\n        }\r\n    </div>\r\n)\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\n\r\nexport const SearchBox = ({ placeholder , handleChange }) => (\r\n    <input className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    //this.setSearchField = this.setSearchField.bind(this);\n\n  }\n\n  render() {\n    const { monsters , searchField } = this.state;\n\n    // var filteredNum = numbers.filter(function(value) {\n    //   return value > 10;\n    // });\n\n    //const searchFilter = monsters.filter(f => f.indexof(searchField) != -1);\n    const filteredMonters = monsters.filter( monster => \n       monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange} />\n        <CardList monsters={filteredMonters}></CardList>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}